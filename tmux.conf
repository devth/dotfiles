set-environment -g POWERLINE_CONFIG_COMMAND /usr/local/bin/powerline-config
set -g default-terminal "screen-256color"

# remap prefix to Control + a
set -g prefix C-Space
unbind C-b
bind C-Space send-prefix

set -g focus-events on
# set-window-option -g mode-mouse on


# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# toggle status bar
unbind t
bind t set-option -g status

# Copying {{{
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -Tcopy-mode-vi v begin-selection
# bind-key -Tcopy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -Tcopy-mode-vi 'y' send -X copy-selection "reattach-to-user-namespace pbcopy"

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-option -g default-command "reattach-to-user-namespace -l zsh"
# set -g default-shell $SHELL
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# }}}


# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator#tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Smart splits
# bind -n C-w-v run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-w v) || tmux split-window -h -c '#{pane_current_path}'"
# bind -n C-w-s run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-w s) || tmux split-window -v -c '#{pane_current_path}'"

# Open new windows in the same directory
bind c new-window -c "#{pane_current_path}"

# always split in CWD
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window

# Resize panes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind -n S-Left resize-pane -L 5
bind -n S-Right resize-pane -R 5

# clear screen
bind C-l send-keys 'C-l'

# highlight status bar on activity
set -g visual-activity on

# change foreground-background for the current window
setw -g window-status-current-attr reverse
setw -g monitor-activity on

setw -g mode-keys vi

# Titles {{{

set-option -g set-titles on
set-option -g set-titles-string '#W(#P) - #T'
set-window-option -g automatic-rename off

# }}}

# Options {{{
set-option -g base-index 0
#set-option -g default-command "exec /usr/bin/login -pf superflo"
# set-option -g mouse-select-pane on

set-option -g status-keys vi
set-option -g history-limit 4096
set-option -s escape-time 0

# enable utf-8 on status bar
set -g status on
# set -g status-utf8 on

# Set status bar
set -g status-bg black
set -g status-fg white
# set -g status-left '#[fg=green]#'
# set-window-option -g window-status-current-bg red

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# }}}

# Load Tmuxline
source ~/.tmuxline.conf

bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Stop preventing visual block mode in vim - not even sure where this comes from
unbind -n C-v
unbind -n C-s
